#include <Arduino.h>
#include <math.h>
#include <util/atomic.h>
#include "pinOutIn.h"
#include "runMotors.h"
#include "encoders.h"
#include "serial.h"
#include <HardwareSerial.h>
#include <libmaple/usart.h>
#include <AccelStepper.h>


#define DT_TIME_SEND_MOTOR_DATA 1000
#define DT_BLUETOOTH_DATA 3
#define DT_CALC_SPEED 500
#define MAX_ACCELERATION 1000
#define MAX_SPEED 1000

AccelStepper stepper1(AccelStepper::DRIVER, STEP_1, DIR_1);
AccelStepper stepper2(AccelStepper::DRIVER, STEP_2, DIR_2);
AccelStepper stepper3(AccelStepper::DRIVER, STEP_3, DIR_3);

void setup() {
  //Declare pins as output:
  // pinMode(PB7, OUTPUT); //sleep
  // pinMode(PB8, OUTPUT); //reset
  // pinMode(PB6, OUTPUT); //step
  // pinMode(PB5, OUTPUT); //dir

  allDriversStep();
  stepperDriver1();
  stepperDriver2();
  stepperDriver3();
  stepResolution(HALF_STEP);

  // pinMode(PB12, OUTPUT); //M0
  // pinMode(PB13, OUTPUT); //M1
  // pinMode(PB14, OUTPUT); //M2

 
  stepper1.setMaxSpeed(MAX_SPEED);
  stepper1.setAcceleration(MAX_ACCELERATION);
  stepper1.setSpeed(400);

  stepper2.setMaxSpeed(MAX_SPEED);
  stepper2.setAcceleration(MAX_ACCELERATION);
  stepper2.setSpeed(400);

  stepper3.setMaxSpeed(MAX_SPEED);
  stepper3.setAcceleration(MAX_ACCELERATION);
  stepper3.setSpeed(400);

}

void loop() {
  //Set the spinning direction clockwise:
  SetMotorSleep(1, HIGH);
  SetMotorSleep(2, HIGH);
  SetMotorSleep(3, HIGH);

  SetMotorReset(1, HIGH);
  SetMotorReset(2, HIGH);
  SetMotorReset(3, HIGH);

  stepResolution(HALF_STEP);


  //digitalWrite(PB5, HIGH);


  
  // digitalWrite(PB6, HIGH);
  // digitalWrite(PC13, LOW);
  // //digitalWrite(PC13, LOW);
  // delayMicroseconds(1000);
  // digitalWrite(PB6, LOW);
  // digitalWrite(PC13, HIGH);
  // //digitalWrite(PC13, HIGH);
  // delayMicroseconds(1000);
  
  // delay(1000);
  // digitalWrite(PB1, LOW);
  // digitalWrite(PB0, LOW);
  // delay(1000);

  stepper1.setSpeed(400);
  stepper1.runSpeed();
  stepper2.setSpeed(400);
  stepper2.runSpeed();
  stepper3.setSpeed(400);
  stepper3.runSpeed();

}